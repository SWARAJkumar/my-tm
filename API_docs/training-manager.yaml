swagger: "2.0"
info:
  description: "This file contains all REST endpoints exposed by Training Manager."
  version: "1.0.0"
  title: "Training Manager API"
  
host: "localhost:5000"
basePath: "/"
schemes:
  - "http"
  
consumes:
  - "application/json"
produces:
  - "application/json"

tags:
  - name: Feature Group
    description: Feature group related operations
  - name: Pipeline
    description: Pipeline related operations
  - name: Training Job
    description: Training Job related operations

paths:
  /trainingjobs/{trainingjob_name}/{version}:
    get:
      tags:
        - Training Job
      summary: "Fetch training job details by name and version"
      description: "Returns detailed information about a specific training job identified by its name and version."
      parameters:
        - name: "trainingjob_name"
          in: "path"
          required: true
          type: "string"
          description: "Name of the training job"
        - name: "version"
          in: "path"
          required: true
          type: "integer"
          description: "Version of the training job"
      responses:
        200:
          description: "Successful response with training job details"
          schema:
            type: "object"
            properties:
              trainingjob:
                type: "object"
                properties:
                  trainingjob_name:
                    type: "string"
                  description:
                    type: "string"
                  feature_list:
                    type: "string"
                  pipeline_name:
                    type: "string"
                  experiment_name:
                    type: "string"
                  arguments:
                    type: "object"
                  query_filter:
                    type: "string"
                  creation_time:
                    type: "string"
                    format: "date-time"
                  run_id:
                    type: "string"
                  steps_state:
                    type: "object"
                  accuracy:
                    type: "string"
                  enable_versioning:
                    type: "boolean"
                  updation_time:
                    type: "string"
                    format: "date-time"
                  version:
                    type: "integer"
                  pipeline_version:
                    type: "string"
                  datalake_source:
                    type: "string"
                  model_url:
                    type: "string"
                  notification_url:
                    type: "string"
                  is_mme:
                    type: "boolean"
                  model_name:
                    type: "string"
                  model_info:
                    type: "string"
        400:
          description: "Invalid training job name or version"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"
        404:
          description: "Training job not found"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"

  /trainingjobs/{trainingjob_name}/{version}/steps_state:
    get:
      tags:
        - Training Job
      summary: "Get steps state information for a training job"
      description: "Returns the state of each step in the training job process."
      parameters:
        - name: "trainingjob_name"
          in: "path"
          required: true
          type: "string"
          description: "Name of the training job"
        - name: "version"
          in: "path"
          required: true
          type: "integer"
          description: "Version of the training job"
      responses:
        200:
          description: "Successful response with steps state information"
          schema:
            type: "object"
        400:
          description: "Invalid training job name or version"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"
        404:
          description: "Training job not found"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"

  /model/{trainingjob_name}/{version}/Model.zip:
    get:
      tags:
        - Training Job
      summary: "Download model zip file"
      description: "Returns the model zip file for a specific training job identified by its name and version."
      parameters:
        - name: "trainingjob_name"
          in: "path"
          required: true
          type: "string"
          description: "Name of the training job"
        - name: "version"
          in: "path"
          required: true
          type: "integer"
          description: "Version of the training job"
      responses:
        200:
          description: "Successful response with model zip file"
          schema:
            type: "file"
        400:
          description: "Invalid training job name or version"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"

  /trainingjobs/{trainingjob_name}/training:
    post:
      tags:
        - Training Job
      summary: "Start training job"
      description: "Starts the training job by invoking the data extraction module and other training steps."
      parameters:
        - name: "trainingjob_name"
          in: "path"
          required: true
          type: "string"
          description: "Name of the training job"
      responses:
        200:
          description: "Training job started successfully"
          schema:
            type: "object"
            properties:
              trainingjob_name:
                type: "string"
              result:
                type: "string"
        400:
          description: "Invalid training job name"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"

  /trainingjob/dataExtractionNotification:
    post:
      tags:
        - Training Job
      summary: "Handle data extraction notification"
      description: "Handles the notification that data extraction is finished and invokes further training steps."
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            type: "object"
            properties:
              trainingjob_name:
                type: "string"
          description: "JSON object containing the name of the training job"
      responses:
        200:
          description: "Pipeline is scheduled successfully"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
        400:
          description: "Invalid training job name or request"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string" 

  /trainingjob/pipelineNotification:
    post:
      tags:
        - Training Job
      summary: "Handle pipeline notification"
      description: "Handles the notification from kf_adapter and updates the model download URL in the database."
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            type: "object"
            properties:
              trainingjob_name:
                type: "string"
                description: "Name of the training job"
              run_status:
                type: "string"
                description: "Status of the run"
      responses:
        200:
          description: "Pipeline notification handled successfully"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
        400:
          description: "Invalid training job name or request"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"

  /trainingjobs/latest:
    get:
      tags:
        - Training Job
      summary: "Get overall status and latest version of all training jobs"
      description: "Fetches the overall status and the latest version of all existing training jobs."
      responses:
        200:
          description: "Successful response with training job status and version details"
          schema:
            type: "object"
            properties:
              trainingjobs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    trainingjob_name:
                      type: "string"
                    version:
                      type: "integer"
                    overall_status:
                      type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"

  /pipelines/{pipe_name}/upload:
    post:
      tags:
        - Pipeline
      summary: "Upload pipeline"
      description: "Uploads a pipeline file to the server."
      parameters:
        - name: "pipe_name"
          in: "path"
          required: true
          type: "string"
          description: "Name of the pipeline"
        - name: "file"
          in: "formData"
          required: true
          type: "file"
          description: "Pipeline file to upload"
        - name: "description"
          in: "formData"
          required: false
          type: "string"
          description: "Description of the pipeline"
      responses:
        200:
          description: "Pipeline uploaded successfully"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"

  /pipelines/{pipeline_name}/versions:
    get:
      tags:
        - Pipeline
      summary: "Get versions of a pipeline"
      description: "Fetches all the versions of a given pipeline."
      parameters:
        - name: "pipeline_name"
          in: "path"
          required: true
          type: "string"
          description: "Name of the pipeline"
      responses:
        200:
          description: "Successful response with pipeline versions"
          schema:
            type: "object"
            properties:
              versions_list:
                type: "array"
                items:
                  type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"

  /pipelines:
    get:
      tags:
        - Pipeline
      summary: "Get all pipeline names"
      description: "Fetches all the names of pipelines available."
      responses:
        200:
          description: "Successful response with all pipeline names"
          schema:
            type: "object"
            properties:
              pipeline_names:
                type: "array"
                items:
                  type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"

  /experiments:
    get:
      summary: "Get all experiment names"
      description: "Fetches all the names of experiments available."
      responses:
        200:
          description: "Successful response with all experiment names"
          schema:
            type: "object"
            properties:
              experiment_names:
                type: "array"
                items:
                  type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"

  /trainingjobs/{trainingjob_name}:
    post:
      tags:
        - Training Job
      summary: "Create a new training job"
      description: "Creates a new training job with the provided details."
      parameters:
        - name: "trainingjob_name"
          in: "path"
          required: true
          type: "string"
          description: "Name of the training job"
        - name: "body"
          in: "body"
          required: true
          schema:
            type: "object"
            properties:
              description:
                type: "string"
              featuregroup_name:
                type: "string"
              pipeline_name:
                type: "string"
              experiment_name:
                type: "string"
              arguments:
                type: "object"
              query_filter:
                type: "string"
              enable_versioning:
                type: "boolean"
              pipeline_version:
                type: "string"
              datalake_source:
                type: "string"
              _measurement:
                type: "string"
              bucket:
                type: "string"
              is_mme:
                type: "boolean"
              model_name:
                type: "string"
      responses:
        201:
          description: "Training job created successfully"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
        400:
          description: "Invalid training job name or data"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"
        409:
          description: "Training job name already exists"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"

    put:
      tags:
        - Training Job
      summary: "Update an existing training job"
      description: "Updates an existing training job with the provided details. Precondition: the training job's overall status should be failed or finished, and no deletion process should be in progress."
      parameters:
        - name: "trainingjob_name"
          in: "path"
          required: true
          type: "string"
          description: "Name of the training job"
        - name: "body"
          in: "body"
          required: true
          schema:
            type: "object"
            properties:
              description:
                type: "string"
              featuregroup_name:
                type: "string"
              pipeline_name:
                type: "string"
              experiment_name:
                type: "string"
              arguments:
                type: "object"
              query_filter:
                type: "string"
              enable_versioning:
                type: "boolean"
              pipeline_version:
                type: "string"
              datalake_source:
                type: "string"
              is_mme:
                type: "boolean"
              model_name:
                type: "string"
      responses:
        200:
          description: "Training job updated successfully"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
        400:
          description: "Invalid training job name or data"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"
        404:
          description: "Training job not found"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"

  /trainingjobs/retraining:
    post:
      tags:
        - Training Job
      summary: "Retrain training jobs"
      description: "Retrains the training jobs specified in the request. The overall status of the training job should be 'failed' or 'finished', and deletion should not be in progress."
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            type: "object"
            properties:
              trainingjobs_list:
                type: "array"
                items:
                  type: "object"
                  properties:
                    trainingjob_name:
                      type: "string"
                      description: "Name of the training job"
                    notification_url:
                      type: "string"
                      description: "Optional URL for notifications"
                    feature_filter:
                      type: "string"
                      description: "Optional feature filter"
      responses:
        200:
          description: "Retraining results"
          schema:
            type: "object"
            properties:
              success_count:
                type: "integer"
              failure_count:
                type: "integer"
        400:
          description: "Invalid request or missing data"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              Exception:
                type: "string"

